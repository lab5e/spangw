// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: gateway/v1/spangw.proto

package gateway

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Config request is sent from the gateway when it starts up
type ConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigRequest) Reset() {
	*x = ConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_v1_spangw_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest) ProtoMessage() {}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_spangw_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest.ProtoReflect.Descriptor instead.
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return file_gateway_v1_spangw_proto_rawDescGZIP(), []int{0}
}

// Keepalive messages are sent by the client to check the status of the connection.
type Keepalive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Keepalive) Reset() {
	*x = Keepalive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_v1_spangw_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keepalive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keepalive) ProtoMessage() {}

func (x *Keepalive) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_spangw_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keepalive.ProtoReflect.Descriptor instead.
func (*Keepalive) Descriptor() ([]byte, []int) {
	return file_gateway_v1_spangw_proto_rawDescGZIP(), []int{1}
}

// The keepalive response is sent by Span in response to the Keepalive message
type KeepaliveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KeepaliveResponse) Reset() {
	*x = KeepaliveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_v1_spangw_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeepaliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepaliveResponse) ProtoMessage() {}

func (x *KeepaliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_spangw_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepaliveResponse.ProtoReflect.Descriptor instead.
func (*KeepaliveResponse) Descriptor() ([]byte, []int) {
	return file_gateway_v1_spangw_proto_rawDescGZIP(), []int{2}
}

// Configuration update for devices. THe gateway must use map this device ID to whatever device is on the
// other side.
type DeviceConfigUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string            `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Config   map[string]string `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags     map[string]string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DeviceConfigUpdate) Reset() {
	*x = DeviceConfigUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_v1_spangw_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceConfigUpdate) ProtoMessage() {}

func (x *DeviceConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_spangw_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceConfigUpdate.ProtoReflect.Descriptor instead.
func (*DeviceConfigUpdate) Descriptor() ([]byte, []int) {
	return file_gateway_v1_spangw_proto_rawDescGZIP(), []int{3}
}

func (x *DeviceConfigUpdate) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceConfigUpdate) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *DeviceConfigUpdate) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// The gateway is responsible for updating the gateway configuration
type GatewayConfigUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayId string            `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	Config    map[string]string `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags      map[string]string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GatewayConfigUpdate) Reset() {
	*x = GatewayConfigUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_v1_spangw_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayConfigUpdate) ProtoMessage() {}

func (x *GatewayConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_spangw_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayConfigUpdate.ProtoReflect.Descriptor instead.
func (*GatewayConfigUpdate) Descriptor() ([]byte, []int) {
	return file_gateway_v1_spangw_proto_rawDescGZIP(), []int{4}
}

func (x *GatewayConfigUpdate) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *GatewayConfigUpdate) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GatewayConfigUpdate) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// This message is sent when a device is removed via the API
type DeviceRemoved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *DeviceRemoved) Reset() {
	*x = DeviceRemoved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_v1_spangw_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceRemoved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceRemoved) ProtoMessage() {}

func (x *DeviceRemoved) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_spangw_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceRemoved.ProtoReflect.Descriptor instead.
func (*DeviceRemoved) Descriptor() ([]byte, []int) {
	return file_gateway_v1_spangw_proto_rawDescGZIP(), []int{5}
}

func (x *DeviceRemoved) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

// This message is sent when a downstream message is created via the API
type DownstreamMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	DeviceId  string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Payload   []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *DownstreamMessage) Reset() {
	*x = DownstreamMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_v1_spangw_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownstreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamMessage) ProtoMessage() {}

func (x *DownstreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_spangw_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamMessage.ProtoReflect.Descriptor instead.
func (*DownstreamMessage) Descriptor() ([]byte, []int) {
	return file_gateway_v1_spangw_proto_rawDescGZIP(), []int{6}
}

func (x *DownstreamMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *DownstreamMessage) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DownstreamMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Upstream messages are fairly simple; they have a device ID, a payload and (optional) metadata
type UpstreamMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string            `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Payload  []byte            `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Metadata map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpstreamMessage) Reset() {
	*x = UpstreamMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_v1_spangw_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpstreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamMessage) ProtoMessage() {}

func (x *UpstreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_spangw_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamMessage.ProtoReflect.Descriptor instead.
func (*UpstreamMessage) Descriptor() ([]byte, []int) {
	return file_gateway_v1_spangw_proto_rawDescGZIP(), []int{7}
}

func (x *UpstreamMessage) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *UpstreamMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UpstreamMessage) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// The gateway metadata may include relevant metadata for the gateway. This is exposed via the API.
type GatewayMetadataUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata map[string]string `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GatewayMetadataUpdate) Reset() {
	*x = GatewayMetadataUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_v1_spangw_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayMetadataUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayMetadataUpdate) ProtoMessage() {}

func (x *GatewayMetadataUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_spangw_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayMetadataUpdate.ProtoReflect.Descriptor instead.
func (*GatewayMetadataUpdate) Descriptor() ([]byte, []int) {
	return file_gateway_v1_spangw_proto_rawDescGZIP(), []int{8}
}

func (x *GatewayMetadataUpdate) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Device updates from the gateway. If the device configuration is updated on the gateway this will update
// both the configuration and the metadata. Typically for LoRa gateways this means the AppSKey, NwkSKey, AppKey
// and frame counters on the device itself and RSSI/SND/frequency/gateway EUI on the metadata.
type DeviceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string            `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Config   map[string]string `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Metadata map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DeviceUpdate) Reset() {
	*x = DeviceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_v1_spangw_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceUpdate) ProtoMessage() {}

func (x *DeviceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_spangw_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceUpdate.ProtoReflect.Descriptor instead.
func (*DeviceUpdate) Descriptor() ([]byte, []int) {
	return file_gateway_v1_spangw_proto_rawDescGZIP(), []int{9}
}

func (x *DeviceUpdate) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceUpdate) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *DeviceUpdate) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Control request message. This is sent by the gateway to Span
type ControlStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//	*ControlStreamRequest_Config
	//	*ControlStreamRequest_UpstreamMessage
	//	*ControlStreamRequest_Keepalive
	//	*ControlStreamRequest_GatewayMetadata
	//	*ControlStreamRequest_DeviceUpdate
	Msg isControlStreamRequest_Msg `protobuf_oneof:"msg"`
}

func (x *ControlStreamRequest) Reset() {
	*x = ControlStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_v1_spangw_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlStreamRequest) ProtoMessage() {}

func (x *ControlStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_spangw_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlStreamRequest.ProtoReflect.Descriptor instead.
func (*ControlStreamRequest) Descriptor() ([]byte, []int) {
	return file_gateway_v1_spangw_proto_rawDescGZIP(), []int{10}
}

func (m *ControlStreamRequest) GetMsg() isControlStreamRequest_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *ControlStreamRequest) GetConfig() *ConfigRequest {
	if x, ok := x.GetMsg().(*ControlStreamRequest_Config); ok {
		return x.Config
	}
	return nil
}

func (x *ControlStreamRequest) GetUpstreamMessage() *UpstreamMessage {
	if x, ok := x.GetMsg().(*ControlStreamRequest_UpstreamMessage); ok {
		return x.UpstreamMessage
	}
	return nil
}

func (x *ControlStreamRequest) GetKeepalive() *Keepalive {
	if x, ok := x.GetMsg().(*ControlStreamRequest_Keepalive); ok {
		return x.Keepalive
	}
	return nil
}

func (x *ControlStreamRequest) GetGatewayMetadata() *GatewayMetadataUpdate {
	if x, ok := x.GetMsg().(*ControlStreamRequest_GatewayMetadata); ok {
		return x.GatewayMetadata
	}
	return nil
}

func (x *ControlStreamRequest) GetDeviceUpdate() *DeviceUpdate {
	if x, ok := x.GetMsg().(*ControlStreamRequest_DeviceUpdate); ok {
		return x.DeviceUpdate
	}
	return nil
}

type isControlStreamRequest_Msg interface {
	isControlStreamRequest_Msg()
}

type ControlStreamRequest_Config struct {
	Config *ConfigRequest `protobuf:"bytes,1,opt,name=config,proto3,oneof"`
}

type ControlStreamRequest_UpstreamMessage struct {
	UpstreamMessage *UpstreamMessage `protobuf:"bytes,2,opt,name=upstream_message,json=upstreamMessage,proto3,oneof"`
}

type ControlStreamRequest_Keepalive struct {
	Keepalive *Keepalive `protobuf:"bytes,3,opt,name=keepalive,proto3,oneof"`
}

type ControlStreamRequest_GatewayMetadata struct {
	GatewayMetadata *GatewayMetadataUpdate `protobuf:"bytes,4,opt,name=gateway_metadata,json=gatewayMetadata,proto3,oneof"`
}

type ControlStreamRequest_DeviceUpdate struct {
	DeviceUpdate *DeviceUpdate `protobuf:"bytes,5,opt,name=device_update,json=deviceUpdate,proto3,oneof"`
}

func (*ControlStreamRequest_Config) isControlStreamRequest_Msg() {}

func (*ControlStreamRequest_UpstreamMessage) isControlStreamRequest_Msg() {}

func (*ControlStreamRequest_Keepalive) isControlStreamRequest_Msg() {}

func (*ControlStreamRequest_GatewayMetadata) isControlStreamRequest_Msg() {}

func (*ControlStreamRequest_DeviceUpdate) isControlStreamRequest_Msg() {}

// Control response message. This is sent from Span to the gateway
type ControlStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//	*ControlStreamResponse_DeviceUpdate
	//	*ControlStreamResponse_GatewayUpdate
	//	*ControlStreamResponse_DeviceRemoved
	//	*ControlStreamResponse_DownstreamMessage
	//	*ControlStreamResponse_KeepaliveResponse
	Msg isControlStreamResponse_Msg `protobuf_oneof:"msg"`
}

func (x *ControlStreamResponse) Reset() {
	*x = ControlStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_v1_spangw_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlStreamResponse) ProtoMessage() {}

func (x *ControlStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_v1_spangw_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlStreamResponse.ProtoReflect.Descriptor instead.
func (*ControlStreamResponse) Descriptor() ([]byte, []int) {
	return file_gateway_v1_spangw_proto_rawDescGZIP(), []int{11}
}

func (m *ControlStreamResponse) GetMsg() isControlStreamResponse_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *ControlStreamResponse) GetDeviceUpdate() *DeviceConfigUpdate {
	if x, ok := x.GetMsg().(*ControlStreamResponse_DeviceUpdate); ok {
		return x.DeviceUpdate
	}
	return nil
}

func (x *ControlStreamResponse) GetGatewayUpdate() *GatewayConfigUpdate {
	if x, ok := x.GetMsg().(*ControlStreamResponse_GatewayUpdate); ok {
		return x.GatewayUpdate
	}
	return nil
}

func (x *ControlStreamResponse) GetDeviceRemoved() *DeviceRemoved {
	if x, ok := x.GetMsg().(*ControlStreamResponse_DeviceRemoved); ok {
		return x.DeviceRemoved
	}
	return nil
}

func (x *ControlStreamResponse) GetDownstreamMessage() *DownstreamMessage {
	if x, ok := x.GetMsg().(*ControlStreamResponse_DownstreamMessage); ok {
		return x.DownstreamMessage
	}
	return nil
}

func (x *ControlStreamResponse) GetKeepaliveResponse() *KeepaliveResponse {
	if x, ok := x.GetMsg().(*ControlStreamResponse_KeepaliveResponse); ok {
		return x.KeepaliveResponse
	}
	return nil
}

type isControlStreamResponse_Msg interface {
	isControlStreamResponse_Msg()
}

type ControlStreamResponse_DeviceUpdate struct {
	DeviceUpdate *DeviceConfigUpdate `protobuf:"bytes,1,opt,name=device_update,json=deviceUpdate,proto3,oneof"`
}

type ControlStreamResponse_GatewayUpdate struct {
	GatewayUpdate *GatewayConfigUpdate `protobuf:"bytes,2,opt,name=gateway_update,json=gatewayUpdate,proto3,oneof"`
}

type ControlStreamResponse_DeviceRemoved struct {
	DeviceRemoved *DeviceRemoved `protobuf:"bytes,3,opt,name=device_removed,json=deviceRemoved,proto3,oneof"`
}

type ControlStreamResponse_DownstreamMessage struct {
	DownstreamMessage *DownstreamMessage `protobuf:"bytes,4,opt,name=downstream_message,json=downstreamMessage,proto3,oneof"`
}

type ControlStreamResponse_KeepaliveResponse struct {
	KeepaliveResponse *KeepaliveResponse `protobuf:"bytes,5,opt,name=keepalive_response,json=keepaliveResponse,proto3,oneof"`
}

func (*ControlStreamResponse_DeviceUpdate) isControlStreamResponse_Msg() {}

func (*ControlStreamResponse_GatewayUpdate) isControlStreamResponse_Msg() {}

func (*ControlStreamResponse_DeviceRemoved) isControlStreamResponse_Msg() {}

func (*ControlStreamResponse_DownstreamMessage) isControlStreamResponse_Msg() {}

func (*ControlStreamResponse_KeepaliveResponse) isControlStreamResponse_Msg() {}

var File_gateway_v1_spangw_proto protoreflect.FileDescriptor

var file_gateway_v1_spangw_proto_rawDesc = []byte{
	0x0a, 0x17, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x61,
	0x6e, 0x67, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x76, 0x31, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0b, 0x0a, 0x09, 0x4b, 0x65, 0x65, 0x70, 0x61, 0x6c,
	0x69, 0x76, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x4b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa7, 0x02, 0x0a, 0x12, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x3c, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x39,
	0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xac, 0x02, 0x0a, 0x13, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x54, 0x61,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x39, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x2c, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x69, 0x0a, 0x11, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xcc, 0x01, 0x0a, 0x0f, 0x55,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x45, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa1, 0x01, 0x0a, 0x15, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa5, 0x02,
	0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x42, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x39, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe4, 0x02, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x48, 0x0a, 0x10, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x70,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a,
	0x09, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65,
	0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x61,
	0x6c, 0x69, 0x76, 0x65, 0x12, 0x4e, 0x0a, 0x10, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x93, 0x03, 0x0a,
	0x15, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a,
	0x0e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x12, 0x64,
	0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4e, 0x0a, 0x12, 0x6b,
	0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c,
	0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x32, 0x6e, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x20, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01,
	0x30, 0x01, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gateway_v1_spangw_proto_rawDescOnce sync.Once
	file_gateway_v1_spangw_proto_rawDescData = file_gateway_v1_spangw_proto_rawDesc
)

func file_gateway_v1_spangw_proto_rawDescGZIP() []byte {
	file_gateway_v1_spangw_proto_rawDescOnce.Do(func() {
		file_gateway_v1_spangw_proto_rawDescData = protoimpl.X.CompressGZIP(file_gateway_v1_spangw_proto_rawDescData)
	})
	return file_gateway_v1_spangw_proto_rawDescData
}

var file_gateway_v1_spangw_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_gateway_v1_spangw_proto_goTypes = []interface{}{
	(*ConfigRequest)(nil),         // 0: gateway.v1.ConfigRequest
	(*Keepalive)(nil),             // 1: gateway.v1.Keepalive
	(*KeepaliveResponse)(nil),     // 2: gateway.v1.KeepaliveResponse
	(*DeviceConfigUpdate)(nil),    // 3: gateway.v1.DeviceConfigUpdate
	(*GatewayConfigUpdate)(nil),   // 4: gateway.v1.GatewayConfigUpdate
	(*DeviceRemoved)(nil),         // 5: gateway.v1.DeviceRemoved
	(*DownstreamMessage)(nil),     // 6: gateway.v1.DownstreamMessage
	(*UpstreamMessage)(nil),       // 7: gateway.v1.UpstreamMessage
	(*GatewayMetadataUpdate)(nil), // 8: gateway.v1.GatewayMetadataUpdate
	(*DeviceUpdate)(nil),          // 9: gateway.v1.DeviceUpdate
	(*ControlStreamRequest)(nil),  // 10: gateway.v1.ControlStreamRequest
	(*ControlStreamResponse)(nil), // 11: gateway.v1.ControlStreamResponse
	nil,                           // 12: gateway.v1.DeviceConfigUpdate.ConfigEntry
	nil,                           // 13: gateway.v1.DeviceConfigUpdate.TagsEntry
	nil,                           // 14: gateway.v1.GatewayConfigUpdate.ConfigEntry
	nil,                           // 15: gateway.v1.GatewayConfigUpdate.TagsEntry
	nil,                           // 16: gateway.v1.UpstreamMessage.MetadataEntry
	nil,                           // 17: gateway.v1.GatewayMetadataUpdate.MetadataEntry
	nil,                           // 18: gateway.v1.DeviceUpdate.ConfigEntry
	nil,                           // 19: gateway.v1.DeviceUpdate.MetadataEntry
}
var file_gateway_v1_spangw_proto_depIdxs = []int32{
	12, // 0: gateway.v1.DeviceConfigUpdate.config:type_name -> gateway.v1.DeviceConfigUpdate.ConfigEntry
	13, // 1: gateway.v1.DeviceConfigUpdate.tags:type_name -> gateway.v1.DeviceConfigUpdate.TagsEntry
	14, // 2: gateway.v1.GatewayConfigUpdate.config:type_name -> gateway.v1.GatewayConfigUpdate.ConfigEntry
	15, // 3: gateway.v1.GatewayConfigUpdate.tags:type_name -> gateway.v1.GatewayConfigUpdate.TagsEntry
	16, // 4: gateway.v1.UpstreamMessage.metadata:type_name -> gateway.v1.UpstreamMessage.MetadataEntry
	17, // 5: gateway.v1.GatewayMetadataUpdate.metadata:type_name -> gateway.v1.GatewayMetadataUpdate.MetadataEntry
	18, // 6: gateway.v1.DeviceUpdate.config:type_name -> gateway.v1.DeviceUpdate.ConfigEntry
	19, // 7: gateway.v1.DeviceUpdate.metadata:type_name -> gateway.v1.DeviceUpdate.MetadataEntry
	0,  // 8: gateway.v1.ControlStreamRequest.config:type_name -> gateway.v1.ConfigRequest
	7,  // 9: gateway.v1.ControlStreamRequest.upstream_message:type_name -> gateway.v1.UpstreamMessage
	1,  // 10: gateway.v1.ControlStreamRequest.keepalive:type_name -> gateway.v1.Keepalive
	8,  // 11: gateway.v1.ControlStreamRequest.gateway_metadata:type_name -> gateway.v1.GatewayMetadataUpdate
	9,  // 12: gateway.v1.ControlStreamRequest.device_update:type_name -> gateway.v1.DeviceUpdate
	3,  // 13: gateway.v1.ControlStreamResponse.device_update:type_name -> gateway.v1.DeviceConfigUpdate
	4,  // 14: gateway.v1.ControlStreamResponse.gateway_update:type_name -> gateway.v1.GatewayConfigUpdate
	5,  // 15: gateway.v1.ControlStreamResponse.device_removed:type_name -> gateway.v1.DeviceRemoved
	6,  // 16: gateway.v1.ControlStreamResponse.downstream_message:type_name -> gateway.v1.DownstreamMessage
	2,  // 17: gateway.v1.ControlStreamResponse.keepalive_response:type_name -> gateway.v1.KeepaliveResponse
	10, // 18: gateway.v1.UserGatewayService.ControlStream:input_type -> gateway.v1.ControlStreamRequest
	11, // 19: gateway.v1.UserGatewayService.ControlStream:output_type -> gateway.v1.ControlStreamResponse
	19, // [19:20] is the sub-list for method output_type
	18, // [18:19] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_gateway_v1_spangw_proto_init() }
func file_gateway_v1_spangw_proto_init() {
	if File_gateway_v1_spangw_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gateway_v1_spangw_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_v1_spangw_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keepalive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_v1_spangw_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeepaliveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_v1_spangw_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceConfigUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_v1_spangw_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayConfigUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_v1_spangw_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceRemoved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_v1_spangw_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownstreamMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_v1_spangw_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpstreamMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_v1_spangw_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayMetadataUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_v1_spangw_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_v1_spangw_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_v1_spangw_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gateway_v1_spangw_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*ControlStreamRequest_Config)(nil),
		(*ControlStreamRequest_UpstreamMessage)(nil),
		(*ControlStreamRequest_Keepalive)(nil),
		(*ControlStreamRequest_GatewayMetadata)(nil),
		(*ControlStreamRequest_DeviceUpdate)(nil),
	}
	file_gateway_v1_spangw_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*ControlStreamResponse_DeviceUpdate)(nil),
		(*ControlStreamResponse_GatewayUpdate)(nil),
		(*ControlStreamResponse_DeviceRemoved)(nil),
		(*ControlStreamResponse_DownstreamMessage)(nil),
		(*ControlStreamResponse_KeepaliveResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gateway_v1_spangw_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gateway_v1_spangw_proto_goTypes,
		DependencyIndexes: file_gateway_v1_spangw_proto_depIdxs,
		MessageInfos:      file_gateway_v1_spangw_proto_msgTypes,
	}.Build()
	File_gateway_v1_spangw_proto = out.File
	file_gateway_v1_spangw_proto_rawDesc = nil
	file_gateway_v1_spangw_proto_goTypes = nil
	file_gateway_v1_spangw_proto_depIdxs = nil
}
